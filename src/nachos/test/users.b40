- id: NwtD0DryFgcSkgy1BFLuF9YyllgKIunhB
  username: GU14-0
  name: Agustian Rinaldy
  balance: 56600
- id: LvYJLBrx1i32gsOndQWja43LypCPUjy1N
  username: KI14-0
  name: Kuki Karuna Priyoga
  balance: 104900
- id: HrpA7ehyqGixE5qRfv23DyPvgQgnq1Gpb
  username: KL16-2
  name: Kelvin Asclepius Minor
  balance: 137100
- id: Gv77pg7p1c0mdewZaZ6Oh79ywDWxRe4eR
  username: SW16-2
  name: Kevin Surya Wahyudi
  balance: 107500
- id: U3rSuXKxafT28x8Q7ux4tXUX9e8GFpMV2
  username: TO16-2
  name: Thomas Asril
  balance: 186100
- id: Udwr8URbnHW7ZKOcw5E8Os4j0DA4sny0D
  username: AX17-1
  name: Albert
  balance: 80100
- id: AdXSPera704AHsvZLljhWvGHK9h3ixZdc
  username: DA17-1
  name: David
  balance: 61700
- id: 05eKXaZIKd9u9XQlgJ6fXcpSsQTAgF5eJ
  username: DN17-1
  name: Dionisius Saviordo Thenuardi
  balance: 143100
- id: HGDGZVfpafQW5BpQi0eWfxthQ6e0KHFwJ
  username: EZ17-1
  name: Ezra Indrastata Spinoza
  balance: 85700
- id: Klk07yHSLZMQFGTgooTkKOSPYP9ObxUGy
  username: FN17-1
  name: Faustina Sidik
  balance: 53200
- id: ReZq2pDdiP6AQBWa3VRC6S7AWR5Zi11S5
  username: IG17-1
  name: Beliga
  balance: 160200
- id: SmEN0Gw5TW7jC1qwqKlbAOODPeFrUyJxN
  username: JA17-1
  name: Jovi Andreas
  balance: 164500
- id: 9SQmklMMUiaTsMnZVPthLKf2qua7GixW0
  username: KN17-1
  name: Deny Kiantono
  balance: 190600
- id: OJt5EHMRYMH0Ao63nHGuhndtHyq9XaNt5
  username: LK17-1
  name: Leonardo Kurniawan
  balance: 141900
- id: JYB6jXgqApVvqfXPhYgl51MphGj6doy2x
  username: NS17-1
  name: Natasia
  balance: 139600
- id: IQU23tUJSSPlmHSqH6KOghbGWToWaYA1Q
  username: VD17-1
  name: Vandevlin Alfonso Wibawa
  balance: 199200
- id: HUhmAIkH6QiRaB1xrc512YbB74bf40Kit
  username: AY17-2
  name: Andy
  balance: 193100
- id: CxRdTZViZCHUw04KxUxKpZe6oMLhKigbq
  username: HU17-2
  name: Herman Gunawan
  balance: 125400
- id: PLkylBYsaMxldbp1rBbn4xAgPqlO2bkog
  username: IE17-2
  name: Aurelia Michele
  balance: 194800
- id: N0g2e6XaPKBSk42j9ZnjYNv08wTs2mFXV
  username: JM17-2
  name: Jeremia Ivan Santoso
  balance: 193700
- id: RsStYGGmy1QopXUW4xTdE4cuNf3hOgaSQ
  username: LX17-2
  name: Alex Reinaldo Tju
  balance: 129900
- id: WLnof4HmFvbLiWa9NULoIGoQxZ4lQjLtm
  username: NP17-2
  name: Noptovius Halimawan
  balance: 190800
- id: 2vQfe4oHdYNS9vkdRtPLeiKavpSDQBLtD
  username: PJ17-2
  name: Panji Kurnia Nugroho
  balance: 84800
- id: IH6CWdjv7GoeH3LnGXbfGfTtL3SsUsyxR
  username: SV17-2
  name: Steven
  balance: 9900
- id: 8XClObi3qmu1KrHUT7KwAgWLBdf3hhJfp
  username: WL17-2
  name: Willy Pranata
  balance: 37800
- id: DwteWvyru0Ook47M8d169R3pMuabkWeM6
  username: YS17-2
  name: Yesun Utomo
  balance: 126300
- id: O3jDMnnVkOt1EsIJQeo01SDmo8PfHZ0Tc
  username: AH18-1
  name: Albertus Hermanto
  balance: 157300
- id: DiuHLo6e3b9LKksWcAS4TZ2UchKkepHiQ
  username: AI18-1
  name: Antoni Wijaya
  balance: 144700
- id: RyQJ0wtJ5GGdatAZS7pKvEf1hNI20x2rC
  username: AO18-1
  name: Chrisando Ryan Pardomuan Siahaan
  balance: 156400
- id: Bh9ifTrsvVWVdD3WsSGgpVbApu6N5puZY
  username: AV18-1
  name: Christian Alvin Setiabudi
  balance: 10400
- id: TvrwIj2AL4GAOt8ftLtlPCH5Xjn2Qe34b
  username: CP18-1
  name: Christopher Limawan
  balance: 33000
- id: NMZseKRX9bnGYfHX5cu5gSO6ARxbTDj8q
  username: DH18-1
  name: Daniel Nathanael
  balance: 57100
- id: 3tEgLIuTRg5Eu9emjANDcMVmZoboIDMTX
  username: DO18-1
  name: Aldo Vernando
  balance: 76400
- id: JLu8D3ouIlVkwXAgQkIfdXZwVoP7W7QVS
  username: EJ18-1
  name: Elbert Reynard Junius
  balance: 102700
- id: ShpRa7LSxqJTB48pKeD4wkvalUlvmKCnf
  username: FJ18-1
  name: Muhammad Naufal Firjatulloh Prakoso
  balance: 43100
- id: 4pcecmas5MbTAPDXejNdx0e0dHylchNey
  username: FL18-1
  name: Frederick Lungken
  balance: 178800
- id: HlOEZbgZlnWoKHypoHT7PPCIxjwXJ293j
  username: FX18-1
  name: Felix Tandian
  balance: 43300
- id: PmkKe2CIuX9BJ2YMYqAuVqCgNDAh8fIIf
  username: HE18-1
  name: Hansen Riady Kwee
  balance: 60100
- id: TnEHieaX31gh8wkHAUNMqGhAAem1jlA92
  username: IV18-1
  name: Ivan Favian Elianto
  balance: 123400
- id: 8a8wXUQuO0HcYgcdo4F8lTxcGkVMXKOxx
  username: KD18-1
  name: Kevin Krisna Dwiputra Lusianto
  balance: 189400
- id: 5ohJdGwnFVvaLAa5ahNcPReByc7qM80Ct
  username: KR18-1
  name: Kevin Riyanto
  balance: 92200
- id: Hqp7i06XXBUBBOAIJU7Qts9gqu6myLIsD
  username: LA18-1
  name: Wulantika Agustine
  balance: 41900
- id: YYuhYWA5mlfEF3DNyqoLlQyTa26oP4HrW
  username: NC18-1
  name: Vincent
  balance: 192100
- id: HxBOguS8KmevvcgjB5SpB5x1rlMLfCGq2
  username: RM18-1
  name: Ricky Martin Goutama
  balance: 187900
- id: Eax1BNx2vdaudU2UsjsGLSXPi7mSg6ylX
  username: RZ18-1
  name: Rheza Winata
  balance: 87600
- id: GP5iftiOwCf0dmhF2N3Hgin0IDgeOo16h
  username: SF18-1
  name: Steven Ferdianto
  balance: 115200
- id: ZvyprurUW92dFO9R9UBCytlqPVhaX6IFb
  username: TD18-1
  name: Thomas Edisson Runkat
  balance: 54600
- id: 3qQhFjkEqAa8dF3Z2WkUudJ9AaZ2DCjTl
  username: WO18-1
  name: Willson Haryanto
  balance: 16800
- id: NGB0kmM3wbPss36ocg1GH3SQKXq4Nr74P
  username: WY18-1
  name: William Harly
  balance: 195600
- id: YU61dRWnHZNSnb39Z0Rkrc3Y0YkHVnODl
  username: AM18-2
  name: William
  balance: 115200
- id: YRenK6dh4iNW9du5VrFDg86wiQkmJUsBB
  username: AP18-2
  name: Alberts Febrian Prawira
  balance: 11500
- id: Hr9XMmfgOm0nrNVRlefLWaexAiZDHuI4j
  username: AW18-2
  name: Antonius Wijaya
  balance: 15300
- id: 8RneOyryFpmEVFvp8llf1m3ZPh6Btrwct
  username: CL18-2
  name: Christy Alexandra
  balance: 109700
- id: SLABtGq3vmLrQrKMvyn2pZ0AYY8g5EPeU
  username: DD18-2
  name: David Kristian
  balance: 38700
- id: N0e1LPFNNKfB9xy94DRs9msTripxxO3MI
  username: DL18-2
  name: Douglas Rakasiwi Nugroho
  balance: 76600
- id: O8Gc71TPTo1weNJLCq4vDYkcdJryl0iHj
  username: GB18-2
  name: Jonathan Gobiel
  balance: 147000
- id: DBrQpbQJ5sOCZaLZyawOxOsshWgabDnuq
  username: GN18-2
  name: Eigner
  balance: 78200
- id: PXuNlHTWRa2DdTGYX80O1qnuUJMOsBT72
  username: HY18-2
  name: Hanni Yolina
  balance: 144600
- id: E0utiwaUSmnhVRBB1P26T3SZEsMTiWRue
  username: IN18-2
  name: Erin
  balance: 52900
- id: PAjWdUOj93ubxNuhqE4vJmI3PUwXWCcCI
  username: IO18-2
  name: Ardiant Utomo
  balance: 196200
- id: 4bY2T9AWbJUhDfeb1yYKJtGQMpgZYHRDj
  username: JN18-2
  name: Justin Delano
  balance: 3500
- id: TJYPcSKc5B3CGbD7etRHmIVcUk0YobkyS
  username: KE18-2
  name: Kelvin
  balance: 110000
- id: UetNsEXtRIgFprsgi4OB6KEcpjlcdQhtP
  username: KF18-2
  name: Kevin Fausta
  balance: 77200
- id: IBqKtOdoO1MEp9217FCc1SBbjms41hINm
  username: KS18-2
  name: Vick Koesoemo Santoso
  balance: 196600
- id: QdCdsNWI77nKO08qiaSnisIrTJ6kd3Ayf
  username: KY18-2
  name: Kenny
  balance: 88200
- id: QY84vJAigZJnsA4NCdV6FunKmyIyoj1HN
  username: LV18-2
  name: Britney Lavenda Yauri
  balance: 101000
- id: XkekIvRVCZkCJ2rcm9owivUHGHTCS4nxq
  username: LW18-2
  name: Kelwin Tantono
  balance: 58500
- id: 20vnAk2v9ieAeDHthC9VZfWyce09a2t2H
  username: RA18-2
  name: Theresia
  balance: 14900
- id: MRMAdrCYKvxEiulnlxbpdSEPW8iCsabb9
  username: RL18-2
  name: Reynaldi Hartono
  balance: 19900
- id: EICCGyCocgV01c4n3tTNboGrAt3nASeVJ
  username: RS18-2
  name: Ryan Sanjaya
  balance: 7300
- id: W3y5xSqqN1TqH7KeVwwEd8odsJjREECPZ
  username: RY18-2
  name: Ferdryan Cen
  balance: 102800
- id: WLuBaYrqSSB68IAJDxkM8LNkenLdQtI8F
  username: AA19-1
  name: Ari Davis
  balance: 60600
- id: FgQnWM22rCgPt5kvTpZ82YyXSvgPCiRht
  username: AC19-1
  name: Audrey Chen
  balance: 18100
- id: BaqguYE6sDj4uxg5TWkoyK8jMaRtkKoxR
  username: AL19-1
  name: Aviel Leonardo Wijaya
  balance: 145900
- id: VCsZ7XqpjNXO9KPktHBguCabN5MccPGON
  username: AS19-1
  name: Angelia Salim
  balance: 11600
- id: YQqX56K4Ir2vDwMPd3dQCblcB1iCPmIMa
  username: BD19-1
  name: Benedictus Danielle
  balance: 67200
- id: NTrVKr0nVX9BcmCZ2Rl41IZHPNIdbiwZl
  username: CN19-1
  name: Calvin Antonius
  balance: 34900
- id: Xu3PPUUkS8HgsPWuHOyc0PskRUHtA1xP9
  username: CY19-1
  name: Christina Yuanita
  balance: 103300
- id: JLOOh2vDcGps2WZHjivQY2I4L6EhCTBOq
  username: DF19-1
  name: Muhammad Daffa Mennawi
  balance: 193600
- id: 7WaPI9ZsbWfDvOOuLWM11mcqrIpdQaAKt
  username: EV19-1
  name: Devinca Limto
  balance: 151900
- id: JqOf23O1IU8NFbl0KtF3JqityXU0tlbWB
  username: FO19-1
  name: Frandi Rianto
  balance: 7900
- id: FTEbXco8Mscxo6UWePMYDJK9DalsShPZv
  username: FR19-1
  name: Edwin Farrel Juniawan
  balance: 8200
- id: P6sLb3kL4KNnQHJLfme77p4Vxid91vpUo
  username: GE19-1
  name: Gerry Lukman
  balance: 95800
- id: 2xZ2TPA3lgsQc30NB7X6XIbckKFjog7s1
  username: HR19-1
  name: Hanson Robertus
  balance: 80800
- id: VxnhlaiJTKY6LBA917LeW0JeiTgfREbkP
  username: IR19-1
  name: Ivan Rivaldi
  balance: 172900
- id: 6qmb373lr3sZDtoQdYLANIe9DSa1vuQv7
  username: JK19-1
  name: Joko Sentosa Chandra
  balance: 154000
- id: Vmey9ZJxKV83219LUUJKtP6lpplIlqNcq
  username: JU19-1
  name: Junaedi Dede
  balance: 91800
- id: Gwd5dNKXhV8PQiR3V9BQlFL3mMNiRFNgV
  username: KV19-1
  name: Kevin Orlando Sutanto
  balance: 44900
- id: XD606VffO6xShfp7vl36y3N56ZPmsVtb0
  username: LD19-1
  name: Carl Ludwi Hendiarta
  balance: 195800
- id: XYrvsWysNbaj0aTYSQAO66xVfNysAWAf1
  username: LI19-1
  name: Alicia
  balance: 128200
- id: 8t39A9vJ0WLvyLoiwPW39S0Sg76Lim31J
  username: LY19-1
  name: Eliora Dharmajayanti
  balance: 28300
- id: Yi9y1yov1AKOxI4q8ishomsYQAHiHbCrW
  username: MQ19-1
  name: Muhammad At Thariq Filardi
  balance: 124000
- id: L4rAsiN148IF3i0OHnyNGasty6bxWTSUi
  username: MZ19-1
  name: Muhamad Zaenul Hasan Basri
  balance: 11400
- id: 1B57AlCSYp7hV6TY1tI2wncEkYPAVBuXU
  username: NH19-1
  name: Nicky Hendrik Sen
  balance: 191700
- id: MkMR8CrfK2mjy9MdUCHyZ83qJEvEauYnY
  username: PB19-1
  name: Yohanes Paulus Setiawan Budihardja
  balance: 6200
- id: Na1OHcwK88qw17QuO11Pg7buPI4l4UiLq
  username: RH19-1
  name: Reinardus Ronaldo Raharja
  balance: 123000
- id: QbxaUcjgKnBfy7Sa7YKQwlvhF2PjQ2igD
  username: RJ19-1
  name: Rafael Jonathan Patrick Tjoa
  balance: 107400
- id: G0a1UyOEkwJDuSBUMSQpwXuEbHpRJffyL
  username: RV19-1
  name: Reiven Candra Hamid
  balance: 165900
- id: WCZZaef4UUYdd4gpAk28XLGo9sk4M6HZJ
  username: SL19-1
  name: Steven Leonardi
  balance: 52500
- id: QwIZ14BXZ3ydWIUqn4XYcZ6VMxrDeAkd3
  username: TS19-1
  name: Teodorus Nathaniel Kurniawan
  balance: 16900
- id: IkAnPRA93cDul6NInuEeK3Wdmw8TIK0HB
  username: VI19-1
  name: Kevin Bachtiar Santoso
  balance: 186100
- id: XMZIQwRD4iZeJO9xIrLD2mjUXEjMFa48V
  username: WR19-1
  name: William Rusdyputra
  balance: 82500
- id: VVgmOSJEce20K2jhrroO51gdrnwWFBcH6
  username: WT19-1
  name: Winner Pranata
  balance: 179400
- id: L12sNlHdyY2NG7oZhrRMfnCBQDnB1pBNs
  username: WU19-1
  name: Wahyu
  balance: 102000
